
public class XZ {

	// Сигнатура: Имя, набор параметров ТИП, ПОРЯДОК, К-во пеменных
	
	// Вначале 1) идет созадние полей 2) Инициализация полей 3) Дальше идет сздание конструкора поумолчанию
	public int a = 10;
    int b = 20;
    final int p = 100;
	static int c = 19; // Общие для всех экземпляров класса 
	XZ(){} // При копиляции всеравно создается и вызывается конструкутор. Обычно используется для инициалиации переменных
	
	XZ(int a, int b) // Если объявили конструктор, то поумолчанию пустого не будет 
	{
		a=a;
		b=b;
		
	}
	XZ(int v, int c, int d) // другая сигнатура . Чтобы не перепутать лучше использовать a and b - не ошибешся !
	{
		a=c;
		b=d;
	}
	
	//	this - Это ссылка на тот-же самый объект с которым работаем (не на класс,  а на ту область видимости). Необходим при перекрытии переменных а=а в=в 

	public static void main (String[] args) // Тут принимаются только статические штуки 
	{
		
		XZ test = new XZ(100500,50);
		System.out.println(test.a);
		System.out.println(test.b);
		
		XZ test2 = new  XZ();
		XZ test3 = new XZ();
		
		
		System.out.println(test2.c + " = " + test3.c); // статики общие для всех экземпляров классов
		// Статические переменные создаются и инициализируются первыми 
		// Статические еременные создаются в в спец области памяти (Heap в области Permanent Generation) 
		
//		System.out.println(test.p = 1000); 
		
		// БЕЗ необходимости не испоьзовать final and static - поскольку инициализируются до старта программы.
		//А мы можем их ни разу за работу программы не использовать 
	}

}



